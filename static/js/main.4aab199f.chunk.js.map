{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","class","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4aab199f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n\n   const inputTextHandler = (e) => {\n       console.log(e.target.value);\n       setInputText(e.target.value);\n   };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n        ...todos,\n        {text: inputText, completed: false, id: Math.random() * 1000}\n    ])\n    setInputText(\"\");\n  };\n\n   const statusHandler = (e) => {\n    setStatus(e.target.value);\n   }\n\n\n    return(\n\n    //code copied from https://github.com/developedbyed/vanilla-todo/blob/master/index.html\n     <form>\n          <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n          <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n            <i className=\"fas fa-plus-square\"></i>\n          </button>\n          <div className=\"select\">\n            <select onChange={statusHandler} name=\"todos\" class=\"filter-todo\">\n              <option value=\"all\">All</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"uncompleted\">Uncompleted</option>\n            </select>\n          </div>\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n//events\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id))\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return {\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }))\n    };\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}> {text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n             </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\n//import components\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n    return (\n    <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n            <Todo\n            setTodos={setTodos}\n            todos={todos}\n            key={todo.id}\n            todo={todo}\n            text={todo.text} />\n        ))}\n        </ul>\n    </div>\n    );\n}\n\n\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n//Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\n  //use state\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n //use effect\n   useEffect(() => {\n    filterHandler();\n   }, [todos, status]);\n\n   useEffect(() => {\n     document.title = \"Dula's Todo List\";\n   }, []);\n\n  //functions and events\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n       <header>\n       <h1>Dula's Todo List </h1>\n       </header>\n       <Form\n            inputText = {inputText}\n            todos={todos}\n            setTodos={setTodos}\n            setInputText={setInputText}\n            setStatus={setStatus} />\n\n       <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}