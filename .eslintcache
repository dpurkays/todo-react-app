[{"/home/dula/projects/todo-react/todo-react-app/src/index.js":"1","/home/dula/projects/todo-react/todo-react-app/src/reportWebVitals.js":"2","/home/dula/projects/todo-react/todo-react-app/src/App.js":"3","/home/dula/projects/todo-react/todo-react-app/src/components/TodoList.js":"4","/home/dula/projects/todo-react/todo-react-app/src/components/Form.js":"5","/home/dula/projects/todo-react/todo-react-app/src/components/Todo.js":"6"},{"size":500,"mtime":1653015844452,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1653015844452,"results":"9","hashOfConfig":"8"},{"size":1305,"mtime":1653015844452,"results":"10","hashOfConfig":"8"},{"size":489,"mtime":1653015844452,"results":"11","hashOfConfig":"8"},{"size":1233,"mtime":1653015844452,"results":"12","hashOfConfig":"8"},{"size":918,"mtime":1653015844452,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wws7jd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dula/projects/todo-react/todo-react-app/src/index.js",[],["28","29"],"/home/dula/projects/todo-react/todo-react-app/src/reportWebVitals.js",[],"/home/dula/projects/todo-react/todo-react-app/src/App.js",["30"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n//Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\n  //use state\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n //use effect\n   useEffect(() => {\n    filterHandler();\n   }, [todos, status]);\n\n  //functions and events\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n       <header>\n       <h1>Dula's Todo List </h1>\n       </header>\n       <Form\n            inputText = {inputText}\n            todos={todos}\n            setTodos={setTodos}\n            setInputText={setInputText}\n            setStatus={setStatus} />\n\n       <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos} />\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/dula/projects/todo-react/todo-react-app/src/components/TodoList.js",[],"/home/dula/projects/todo-react/todo-react-app/src/components/Form.js",[],"/home/dula/projects/todo-react/todo-react-app/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":19,"column":7,"nodeType":"37","endLine":19,"endColumn":22,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"44","text":"45"},[471,486],"[todos, status, filterHandler]"]